##############################################################################
#
# NOTE: To change property values contained in this file, do not modify this
# file directly: IBM may, without warning, overwrite your changes during
# an install or upgrade.  Instead, please use an override.properties file 
# that serves as a central location for modifications to Factory properties.
# 
# Making a property entry in an override.properties file with your custom 
# value will override the default value for that property at runtime.  If you
# upgrade the project and get a new instance of any of the Factory-supplied
# properties files your override.properties file will remain untouched.
#
# There are two different places to put your overrides, depending on whether
# or not you want the changes to affect the Factory running on the server or 
# if you just want to affect the Designer experience.  
# 
# To affect the Factory running on the server, put your overrides inside the 
# project that you want to modify, in the file 
# WebContent\WEB-INF\config\override.properties
# (You may have to create this file.)
#
# To affect just the Designer experience (for all projects), you can put the 
# override.properties file anywhere (outside a project), and you need to set
# the location in the Windows/Preferences page for the Factory. 
#
# The same override.properties file should be used to override properties in
# any of the following properties files.
# 
#   bowstreet.properties
#   cluster.properties
#   logging.properties
#   server.properties
#
##############################################################################

#-------------------------
# Logging Lifecycle Properties
#-------------------------

# Set this property to true to perform a complete shutdown of Log4J when the WAR is undeployed.
# Set to false to perform a selective shutdown of Log4J where only Web Experience Factory loggers and
# appenders are shutdown.  Web Experience Factory loggers are identified by having "bowstreet" as part
# of the logger's name.
logging.log4j.completeShutdown=true

#-------------------------
# Access Log Properties
#-------------------------

# Access Log properties are ignored if the Factory runs on top of other HTTP Engine.

# set this property to true if you want to enable acces logging, set it to false if you don't want to
logging.access.enabled=false

#--------------------------
# Server Stats Properties
#--------------------------

# do you want to enable serverStats logging?
logging.serverStats.enabled=true

# time interval to poll serverStats information
logging.serverStats.snapshotInterval=300

# filters for serverStats checking
# Syntax: logging.serverStats.criteria=[criterion],[criterion]... (comma separated list)
logging.serverStats.criteria=tooManySessions,tooManyModelsLoaded

# do you want to enable this filter?
# to change log4j settings, you can define or modify the settings for the Logger named
#   bowstreet.system.server.logging.serverStats.criterion.tooManySessions

logging.serverStats.criterion.tooManySessions.enabled=false

# if the Sessions in current serverStats log is bigger than 5000, 
# send the warning message to corresponding logger.
# the possible value for logging.serverStats.criterion.<criterion name>.item is 
#    "ActiveSessions", "ErrorsLogged", "MemFree", "MemInUse", "MemTotal",
#    "ModelCacheRegenEntries", "OutputCacheHits", "OutputCacheMisses",
#    "ParallelModelRequests", "PeakSessions", "Regens", "RegensFromCache",
#    "RestoredSessions", "Sessions", "SevereErrorsLogged", "WarningsLogged",
#    "WebAppJSPSourceWritten", "WebAppMethodClassWritten", "WebAppRequests",
#    "WebAppsInSessions", "WebAppsInstantiated", "WebAppSOAPRequests"

# the possible values for logging.serverStats.criterion.<criterion name>.comparator are 
#      ">=", ">", "=", "<", "<="

logging.serverStats.criterion.tooManySessions.item=Sessions
logging.serverStats.criterion.tooManySessions.comparator=>
logging.serverStats.criterion.tooManySessions.threshold=5000
logging.serverStats.criterion.tooManySessions.message="Session threshold has been reached"


# do you want to enable this filter?
logging.serverStats.criterion.tooManyModelsLoaded.enabled=false

# to change log4j settings, you can define or modify the settings for the Logger named
#   bowstreet.system.server.logging.serverStats.criterion.tooManyModelsLoaded

# if the ModelsLoaded in current serverStats log is bigger than 3000, 
# send the warning message to corresponding loggers
logging.serverStats.criterion.tooManyModelsLoaded.item=ModelsLoaded
logging.serverStats.criterion.tooManyModelsLoaded.comparator=>
logging.serverStats.criterion.tooManyModelsLoaded.threshold=3000
logging.serverStats.criterion.tooManyModelsLoaded.message="Model threshold has been reached"


#-----------------------
# Event Log Properties
#-----------------------

# event logging is always enabled. You can't disable it.

# filters for event logging
# Syntax: logging.event.criteria=[criterion],[criterion]... (comma separated list)
# to change log4j settings, you can define or modify the settings for the Logger named
#   bowstreet.system.server.logging.event.criterion.abnormal

logging.event.criteria=abnormal

# do you want to enable this filter?
logging.event.criterion.abnormal.enabled=true

# this filter matches all log has severity be more severe than or equal to "infomation".
# the possible value for logging.event.criterion.<criterion name>.comparator is ">=", ">", "="
# the possible value for logging.event.criterion.<criterion name>.severity is "severe","error","warning","information","debug"
# the possible value for logging.event.criterion.<criterion name>.component is "server","security","service","model","db","dir_services","servlet","admin","PROFILING","CONFIG"
logging.event.criterion.abnormal.comparator=>=
logging.event.criterion.abnormal.severity=warning
logging.event.criterion.abnormal.provider=*
logging.event.criterion.abnormal.component=*
logging.event.criterion.abnormal.msg=*
logging.event.criterion.abnormal.priority=1
