################################################################################
# PROFILE SET MIGRATION PROPERTIES
################################################################################

# This file is a preconfigured example of how to use a property file
# to drive the profile set migration utility.  The file is configured
# to migrate the Factory's default profile sets (in WEB-INF/profiles)
# into Oracle, Sql Server, or DB2.  The migration is accomplished by
# passing this property file as a command line parameter to a script
# located in the WEB-INF/bin directory.  For example,
#
#   migrate-profilesets.bat -f ..\config\migrate-profilesets.properties 
#
# when issued from a command line in the WEB-INF/bin directory will
# cause the utility to use properties defined in this file to drive
# the migration.  Note that before you can successfully use the
# migration utility a database must first have been configured using
# the Factory supplied table and stored procedure creation scripts.
# These scripts can be found at WEB-INF/factory/scripts.  You must
# also enable one set of the database connection properties defined
# below and set the values according to the database environment you
# created.

################################################################################
# LOGGING PROPERTIES
################################################################################

# The properties below causes the log to be flushed every second, log
# files to be written to WEB-INF/logs, and log file names to be prepended
# with the string "migration_event_".
logging.event.flush.interval=1
logging.driver.eventSink.directory=../logs
logging.driver.eventSink.prefix=migration_event_

################################################################################
# PROFILE SET MIGRATION PROPERTIES
################################################################################

# This property determines the direction of the migration. 
# 1 migrates profile sets from the file system to the database. 
# 2 migrates profile sets from the database to the file system.
bowstreet.profiles.storage.migration.direction=1

# This property determines if a backup of profile sets in the
# database is made before they are overwritten by the utility.
# 1 creates a backup named profile-sets-yyyy-MM-dd-hh-mm-ss.zip
# 2 skips the backup step
# This property is ignored when migrating profile sets to the
# file-system from the database; that is, profile sets on disk
# are not saved in a backup before being overwritten.
bowstreet.profiles.storage.migration.backup=1

# This property specified the file-system path where profile set
# files are located for migration into the database or where they
# will be written when migrating from the database.
bowstreet.profiles.storage.migration.directory=../profiles

################################################################################
# PROFILE SET MIGRATION DATABASE CONNECTION PROPERTIES
################################################################################

# Oracle
# bowstreet.profiles.storage.connectionFactory.jdbcUrl=jdbc:oracle:thin:@host:1521:database
# bowstreet.profiles.storage.connectionFactory.jdbcUserName=user
# bowstreet.profiles.storage.connectionFactory.jdbcPassword=password

# SqlServer
# bowstreet.profiles.storage.connectionFactory.jdbcUrl=jdbc:microsoft:sqlserver://host:1433
# bowstreet.profiles.storage.connectionFactory.jdbcUserName=user
# bowstreet.profiles.storage.connectionFactory.jdbcPassword=password

# DB2
# bowstreet.profiles.storage.connectionFactory.jdbcUrl=jdbc:db2://host:6789/database
# bowstreet.profiles.storage.connectionFactory.jdbcUserName=user
# bowstreet.profiles.storage.connectionFactory.jdbcPassword=password

